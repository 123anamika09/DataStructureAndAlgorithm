

          class Solution {
    public List<List<Integer>> generate(int numRows) {
         List<List<Integer>> res = new ArrayList<>();

        // Base case: If numRows is 0, return an empty list
        if (numRows == 0) {
            return res;
        }

        // First row is always [1]
        res.add(new ArrayList<>(Arrays.asList(1)));

        // Loop to generate each row
        for (int i = 1; i < numRows; i++) {
            List<Integer> row = new ArrayList<>();
            List<Integer> prevRow = res.get(i - 1);

            // First element is always 1
            row.add(1);

            // Fill the middle elements
            for (int j = 1; j < i; j++) {
                row.add(prevRow.get(j - 1) + prevRow.get(j));
            }

            // Last element is always 1
            row.add(1);

            // Add the row to the result
            res.add(row);
        }

        return res;
    }
}
