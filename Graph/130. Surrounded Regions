class Solution {
    public static void helper(char[][]board, int row,int col){
        int n = board.length;
        int m = board[0].length;
        if(row<0 || row >=n || col<0 || col>= m || board[row][col] != 'O') return;
        board[row][col] = 'p';
          helper(board, row-1, col ); //phle unique character se mark kre then uske left right sb side chaeck kre aur svi ko unique chara ter se mark kre by recursion
        //    yha whii mark hua hoga jisko hm x me convert nhi kr skte mtlb ki edge wala
           helper(board, row+1 , col );
            helper(board, row , col-1 );
             helper(board, row , col+1 );
    }
    public void solve(char[][] board) {
        int rows = board.length;
        int col = board[0].length;
   
          for(int j = 0;j<col ;j++){ // agr for loop ko upr likhenge tophr helper me row aur col ko 0, 0 pss krenge to loop run  hi nhi hoga so niche pss krenge
              
                helper(board, 0, j); // 1st row ko traverse aur mark
                helper(board , rows-1, j);// last wale row ka traversal & mark
            
              }  
              for(int i = 0;i<rows;i++){
                helper(board , i, 0);
                helper(board , i , col-1);
              }
              for(int i = 0;i<rows;i++){
                for(int j = 0;j<col;j++){
                    if(board[i][j] == 'p')
                    board[i][j] = 'O';
                    else if(board[i][j] == 'O') {
                        board[i][j] = 'X';
                    }
                }
              }    
       
    }
}
