class Solution {
    public List<List<Integer>> printGraph(int V, int edges[][]) {
        List<List<Integer>> adj = new ArrayList<>();
        for( int i =0;i<V;i++){
            adj.add(new ArrayList<>());
        }
        for(int i=0;i<edges.length;i++ ){ 
            //  edge [2, 3]
            adj.get(edges[i][0]).add(edges[i][1]); //: Adds 3 to vertex 2's adjacency list
            adj.get(edges[i][1]).add(edges[i][0]); //Adds 2 to vertex 3's adjacency list
        //   Both vertices 2 and 3 are connected to each other
        }
        return adj;
    }
}

//  adj.get(edges[i][0]).add(edges[i][1]);

// edges[i][0]   gets the first vertex of the current edge
// list.get(edges[i][0]) retrieves the adjacency list for that vertex
// .add(edges[i][1]) adds the second vertex to the first vertex's adjacency list
// This creates a connection: vertex A â†’ vertex B

