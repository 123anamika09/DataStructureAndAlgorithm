class Solution {
    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        int m =  obstacleGrid.length;
        int n = obstacleGrid[0].length;
        // without obstacle me hm 1st row & 1st column me sbko 1 daal denge aur jhha pr 2 path aa rhe ya mulipl e wha pr usse 1 previous & usse left wale ka sum daal denge

        int[][]dp = new int[m][n];
        dp[0][0] = 1;
        if(obstacleGrid[0][0] == 1 || obstacleGrid[m-1][n-1]==1)  return 0;
       
        for(int i = 0;i<m;i++){
            
            if( obstacleGrid[i][0] == 1)
                break;
                dp[i][0] = 1;
        }
        for(int j = 0;j<n;j++){
        if( obstacleGrid[0][j] == 1)
                break;
            dp[0][j] = 1;


        }

        for(int i =1;i<m;i++){
            for(int j = 1;j<n;j++){
                if(obstacleGrid[i][j] == 1)
                dp[i][j]=0;
                else
                 dp[i][j] = dp[i-1][j]+dp[i][j-1]; // dp[i-1][j] == upr wala & dp[i][j-1] == left wala ]
                 
            }
        }
        return dp[m-1][n-1];
    }
}
