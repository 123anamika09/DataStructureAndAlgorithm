class Solution {
    public String reverseWords(String s) {
       s.trim(); // remove space at leading  trailing (end)
       String[] words = s.split(" "); // split the word  
        StringBuilder sb = new StringBuilder();
        for(int i = words.length-1;i>=0;i--){
            if(words[i]!=" ")
            sb.append(words[i]);
            sb.append(" ");
        }String str= sb.toString().trim();
        str=str.replaceAll("( )+"," "); // convert multiple space into single space
        return str;
    }
}
   ----------------------------------------m-2 ---------------------------------------
class Solution {
    public String reverseWords(String s) {
        StringBuilder sb = new StringBuilder();

        //  trim() It doesn’t touch the extra spaces in the middle — only front and end. 
        s=s.trim();
        
        //  The split() method is used to break a string into an array of substrings, based on a given delimiter (usually a character or regex pattern).
   String[] split = s.split("\\s+"); //    \\s+ - regex expression
  for(int i = split.length-1;i>=0;i--){
    sb.append(split[i]);
     if (i != 0) sb.append(" "); // add space bt not for last
  }
        return sb.toString();
        
    }
}
